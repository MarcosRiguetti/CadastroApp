@page "/add_pessoa"
@page "/update_pessoa/{PessoaID:int}"


@using BDCadastro.Service
@inject IPessoaService PessoaService


<h3>Cadastro</h3>

<div class="form-group">
    <label>Nome</label>
    <input @bind="nome" class="form-control" placeholder="Nome">
</div>

<div class="mt-2 form-group">
    <label>Email</label>
    <input @bind="email" class="form-control" placeholder="Email">
</div>


<div class="mt-2 form-group">
    <label>Genero</label>
    <div class=" d-flex flex-row">
        <div class="col-6 d-flex justify-content-between">
            <div class="form-check">
                <input checked="@(genero=="Masculino")" @onchange="@(()=> setGender("Masculino"))" class="form-check-input" type="radio" name="flexRadioDefault" >
                <label class="form-check-label" for="flexRadioDefault1">
                    Masculino
                </label>
            </div>
        </div>
    </div>
    <div class=" d-flex flex-row">
        <div class="col-6 d-flex justify-content-between">
            <div class="form-check">
                <input checked="@(genero=="Feminino")" @onchange="@(()=> setGender("Feminino"))" class="form-check-input" type="radio" name="flexRadioDefault">
                <label class="form-check-label" for="flexRadioDefault2">
                    Feminino
                </label>
            </div>
        </div>
    </div>
</div>

<button type="submit" @onclick="AddPessoaRecord" class="mt-2 btn btn-primary">Enviar</button>


@code {

    [Parameter]
    public int PessoaID { get; set; }

    private string nome;
    private string email;
    private string genero;

    private void setGender(string gender)
    {
        this.genero = gender;
    }

    protected async override Task OnInitializedAsync()
    {
        if (PessoaID > 0)
        {
            var response = await PessoaService.GetPessoaByID(PessoaID);
            if (response != null)
            {
                nome = response.Nome;
                email = response.Email;
                genero = response.Genero;
            }
        }
    }


    private async void AddPessoaRecord()
    {
        var pessoaModel = new Model.PessoaModel
            {
                Nome = nome,
                Email = email,
                Genero = genero,
                PessoaID = PessoaID
            };

        int response = -1;
        if (PessoaID > 0)
        {
            response = await PessoaService.UpdatePessoa(pessoaModel);
            //update record
        }
        else
        {
            response = await PessoaService.AddPessoa(pessoaModel);
            //add record
        }


        if (response > 0)
        {
            nome = genero = email = string.Empty;
            this.StateHasChanged();
            await App.Current.MainPage.DisplayAlert("Registro Salvo",
            "Registro Salvo", "OK");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops",
           "Algo deu errado ao adicionar o registro", "OK");
        }

    }
}